{"ast":null,"code":"var _jsxFileName = \"/Users/roderickmoise/Desktop/Documents/Downloads/ramp-fe-challenge/src/components/InputSelect/index.tsx\",\n  _s = $RefreshSig$();\nimport Downshift from \"downshift\";\nimport { useCallback, useState, useEffect } from \"react\";\nimport classNames from \"classnames\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function InputSelect({\n  label,\n  defaultValue,\n  onChange: consumerOnChange,\n  items,\n  parseItem,\n  isLoading,\n  loadingLabel\n}) {\n  _s();\n  const [selectedValue, setSelectedValue] = useState(defaultValue !== null && defaultValue !== void 0 ? defaultValue : null);\n  const [dropdownPosition, setDropdownPosition] = useState({\n    top: 0,\n    left: 0\n  });\n  const [dropdownOpen, setDropdownOpen] = useState(false); // Track if dropdown is open\n\n  const onChange = useCallback(selectedItem => {\n    if (selectedItem === null) {\n      return;\n    }\n    consumerOnChange(selectedItem);\n    setSelectedValue(selectedItem);\n  }, [consumerOnChange]);\n\n  // Function to calculate and update the position of the dropdown\n  const updateDropdownPosition = target => {\n    if (target) {\n      const {\n        top,\n        left\n      } = target.getBoundingClientRect();\n      const {\n        scrollY,\n        scrollX\n      } = window;\n      setDropdownPosition({\n        top: scrollY + top + target.offsetHeight,\n        // Cast to `HTMLElement`\n        left: scrollX + left\n      });\n    }\n  };\n  useEffect(() => {\n    const handleScroll = () => {\n      if (dropdownOpen) {\n        const selectElement = document.getElementById(\"RampSelect\");\n        updateDropdownPosition(selectElement);\n      }\n    };\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, [dropdownOpen]);\n  return /*#__PURE__*/_jsxDEV(Downshift, {\n    id: \"RampSelect\",\n    onChange: onChange,\n    onStateChange: ({\n      isOpen\n    }) => setDropdownOpen(!!isOpen) // Convert `undefined` to `false`\n    ,\n    selectedItem: selectedValue,\n    itemToString: item => item ? parseItem(item).label : \"\",\n    children: ({\n      getItemProps,\n      getLabelProps,\n      getMenuProps,\n      isOpen,\n      highlightedIndex,\n      selectedItem,\n      getToggleButtonProps,\n      inputValue\n    }) => {\n      const toggleProps = getToggleButtonProps();\n      const parsedSelectedItem = selectedItem === null ? null : parseItem(selectedItem);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"RampInputSelect--root\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"RampText--s RampText--hushed\",\n          ...getLabelProps(),\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"RampBreak--xs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"RampInputSelect--input\",\n          onClick: event => {\n            updateDropdownPosition(event.currentTarget);\n            toggleProps.onClick(event);\n          },\n          children: inputValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classNames(\"RampInputSelect--dropdown-container\", {\n            \"RampInputSelect--dropdown-container-opened\": isOpen\n          }),\n          ...getMenuProps(),\n          style: {\n            top: dropdownPosition.top,\n            left: dropdownPosition.left\n          },\n          children: renderItems()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this);\n      function renderItems() {\n        if (!isOpen) {\n          return null;\n        }\n        if (isLoading) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"RampInputSelect--dropdown-item\",\n            children: [loadingLabel, \"...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 20\n          }, this);\n        }\n        if (items.length === 0) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"RampInputSelect--dropdown-item\",\n            children: \"No items\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 20\n          }, this);\n        }\n        return items.map((item, index) => {\n          const parsedItem = parseItem(item);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            ...getItemProps({\n              key: parsedItem.value,\n              index,\n              item,\n              className: classNames(\"RampInputSelect--dropdown-item\", {\n                \"RampInputSelect--dropdown-item-highlighted\": highlightedIndex === index,\n                \"RampInputSelect--dropdown-item-selected\": (parsedSelectedItem === null || parsedSelectedItem === void 0 ? void 0 : parsedSelectedItem.value) === parsedItem.value\n              })\n            }),\n            children: parsedItem.label\n          }, parsedItem.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this);\n        });\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(InputSelect, \"d4qaGH7EUeJItF7gwIjcksZpCyU=\");\n_c = InputSelect;\nvar _c;\n$RefreshReg$(_c, \"InputSelect\");","map":{"version":3,"names":["Downshift","useCallback","useState","useEffect","classNames","jsxDEV","_jsxDEV","InputSelect","label","defaultValue","onChange","consumerOnChange","items","parseItem","isLoading","loadingLabel","_s","selectedValue","setSelectedValue","dropdownPosition","setDropdownPosition","top","left","dropdownOpen","setDropdownOpen","selectedItem","updateDropdownPosition","target","getBoundingClientRect","scrollY","scrollX","window","offsetHeight","handleScroll","selectElement","document","getElementById","addEventListener","removeEventListener","id","onStateChange","isOpen","itemToString","item","children","getItemProps","getLabelProps","getMenuProps","highlightedIndex","getToggleButtonProps","inputValue","toggleProps","parsedSelectedItem","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","event","currentTarget","style","renderItems","length","map","index","parsedItem","key","value","_c","$RefreshReg$"],"sources":["/Users/roderickmoise/Desktop/Documents/Downloads/ramp-fe-challenge/src/components/InputSelect/index.tsx"],"sourcesContent":["import Downshift from \"downshift\"\nimport { useCallback, useState, useEffect } from \"react\"\nimport classNames from \"classnames\"\nimport { DropdownPosition, InputSelectOnChange, InputSelectProps } from \"./types\"\n\nexport function InputSelect<TItem>({\n  label,\n  defaultValue,\n  onChange: consumerOnChange,\n  items,\n  parseItem,\n  isLoading,\n  loadingLabel,\n}: InputSelectProps<TItem>) {\n  const [selectedValue, setSelectedValue] = useState<TItem | null>(defaultValue ?? null)\n  const [dropdownPosition, setDropdownPosition] = useState<DropdownPosition>({\n    top: 0,\n    left: 0,\n  })\n  const [dropdownOpen, setDropdownOpen] = useState(false) // Track if dropdown is open\n\n  const onChange = useCallback<InputSelectOnChange<TItem>>(\n    (selectedItem) => {\n      if (selectedItem === null) {\n        return\n      }\n\n      consumerOnChange(selectedItem)\n      setSelectedValue(selectedItem)\n    },\n    [consumerOnChange]\n  )\n\n  // Function to calculate and update the position of the dropdown\n  const updateDropdownPosition = (target: HTMLElement | null) => {\n    if (target) {\n      const { top, left } = target.getBoundingClientRect()\n      const { scrollY, scrollX } = window\n      setDropdownPosition({\n        top: scrollY + top + (target as HTMLElement).offsetHeight, // Cast to `HTMLElement`\n        left: scrollX + left,\n      })\n    }\n  }\n\n  useEffect(() => {\n    const handleScroll = () => {\n      if (dropdownOpen) {\n        const selectElement = document.getElementById(\"RampSelect\")\n        updateDropdownPosition(selectElement)\n      }\n    }\n\n    window.addEventListener(\"scroll\", handleScroll)\n\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll)\n    }\n  }, [dropdownOpen])\n\n  return (\n    <Downshift<TItem>\n      id=\"RampSelect\"\n      onChange={onChange}\n      onStateChange={({ isOpen }) => setDropdownOpen(!!isOpen)} // Convert `undefined` to `false`\n      selectedItem={selectedValue}\n      itemToString={(item) => (item ? parseItem(item).label : \"\")}\n    >\n      {({\n        getItemProps,\n        getLabelProps,\n        getMenuProps,\n        isOpen,\n        highlightedIndex,\n        selectedItem,\n        getToggleButtonProps,\n        inputValue,\n      }) => {\n        const toggleProps = getToggleButtonProps()\n        const parsedSelectedItem = selectedItem === null ? null : parseItem(selectedItem)\n\n        return (\n          <div className=\"RampInputSelect--root\">\n            <label className=\"RampText--s RampText--hushed\" {...getLabelProps()}>\n              {label}\n            </label>\n            <div className=\"RampBreak--xs\" />\n            <div\n              className=\"RampInputSelect--input\"\n              onClick={(event) => {\n                updateDropdownPosition(event.currentTarget as HTMLElement)\n                toggleProps.onClick(event)\n              }}\n            >\n              {inputValue}\n            </div>\n\n            <div\n              className={classNames(\"RampInputSelect--dropdown-container\", {\n                \"RampInputSelect--dropdown-container-opened\": isOpen,\n              })}\n              {...getMenuProps()}\n              style={{ top: dropdownPosition.top, left: dropdownPosition.left }}\n            >\n              {renderItems()}\n            </div>\n          </div>\n        )\n\n        function renderItems() {\n          if (!isOpen) {\n            return null\n          }\n\n          if (isLoading) {\n            return <div className=\"RampInputSelect--dropdown-item\">{loadingLabel}...</div>\n          }\n\n          if (items.length === 0) {\n            return <div className=\"RampInputSelect--dropdown-item\">No items</div>\n          }\n\n          return items.map((item, index) => {\n            const parsedItem = parseItem(item)\n            return (\n              <div\n                key={parsedItem.value}\n                {...getItemProps({\n                  key: parsedItem.value,\n                  index,\n                  item,\n                  className: classNames(\"RampInputSelect--dropdown-item\", {\n                    \"RampInputSelect--dropdown-item-highlighted\": highlightedIndex === index,\n                    \"RampInputSelect--dropdown-item-selected\":\n                      parsedSelectedItem?.value === parsedItem.value,\n                  }),\n                })}\n              >\n                {parsedItem.label}\n              </div>\n            )\n          })\n        }\n      }}\n    </Downshift>\n  )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}