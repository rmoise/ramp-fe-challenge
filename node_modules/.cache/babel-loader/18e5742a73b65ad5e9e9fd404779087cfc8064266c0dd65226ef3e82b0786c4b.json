{"ast":null,"code":"var _jsxFileName = \"/Users/roderickmoise/Desktop/Documents/Downloads/ramp-fe-challenge/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { Fragment, useCallback, useEffect, useMemo, useState } from \"react\";\nimport { InputSelect } from \"./components/InputSelect\";\nimport { Instructions } from \"./components/Instructions\";\nimport { Transactions } from \"./components/Transactions\";\nimport { useEmployees } from \"./hooks/useEmployees\";\nimport { usePaginatedTransactions } from \"./hooks/usePaginatedTransactions\";\nimport { useTransactionsByEmployee } from \"./hooks/useTransactionsByEmployee\";\nimport { EMPTY_EMPLOYEE } from \"./utils/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function App() {\n  _s();\n  const {\n    data: employees,\n    loading: employeesLoading,\n    fetchAll: fetchEmployees\n  } = useEmployees();\n  const {\n    data: paginatedTransactions,\n    loading: paginatedLoading,\n    fetchAll: fetchPaginatedTransactions,\n    invalidateData: invalidatePaginatedData\n  } = usePaginatedTransactions();\n  const {\n    data: transactionsByEmployee,\n    fetchById: fetchTransactionsByEmployee,\n    invalidateData: invalidateEmployeeData\n  } = useTransactionsByEmployee();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isAllEmployees, setIsAllEmployees] = useState(true);\n  const transactions = useMemo(() => {\n    console.log(\"Transactions:\", isAllEmployees ? paginatedTransactions === null || paginatedTransactions === void 0 ? void 0 : paginatedTransactions.data : transactionsByEmployee);\n    return isAllEmployees ? (paginatedTransactions === null || paginatedTransactions === void 0 ? void 0 : paginatedTransactions.data) || [] : transactionsByEmployee || [];\n  }, [isAllEmployees, paginatedTransactions, transactionsByEmployee]);\n  const loadAllTransactions = useCallback(async () => {\n    setIsLoading(true);\n    await fetchEmployees();\n    await fetchPaginatedTransactions();\n    setIsLoading(false);\n  }, [fetchEmployees, fetchPaginatedTransactions]);\n  const loadTransactionsByEmployee = useCallback(async employeeId => {\n    await fetchTransactionsByEmployee(employeeId);\n  }, [fetchTransactionsByEmployee]);\n  useEffect(() => {\n    if (!employees && !employeesLoading) {\n      loadAllTransactions();\n    }\n  }, [employees, employeesLoading, loadAllTransactions]);\n  const handleEmployeeChange = useCallback(async newValue => {\n    setIsLoading(true);\n    if (!newValue || newValue.id === \"all-employees\") {\n      console.log(\"Switching to All Employees.\");\n      setIsAllEmployees(true);\n      await loadAllTransactions();\n    } else {\n      console.log(`Fetching transactions for employee ID: ${newValue.id}`);\n      setIsAllEmployees(false);\n      await loadTransactionsByEmployee(newValue.id);\n    }\n    setIsLoading(false);\n  }, [loadAllTransactions, loadTransactionsByEmployee]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"MainContainer\",\n      children: [/*#__PURE__*/_jsxDEV(Instructions, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"RampBreak--l\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputSelect, {\n        isLoading: isLoading || employeesLoading,\n        defaultValue: EMPTY_EMPLOYEE,\n        items: employees ? [EMPTY_EMPLOYEE, ...employees] : [],\n        label: \"Filter by employee\",\n        loadingLabel: \"Loading employees...\",\n        parseItem: item => ({\n          value: item.id,\n          label: `${item.firstName} ${item.lastName}`\n        }),\n        onChange: handleEmployeeChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"RampBreak--l\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"RampGrid\",\n        children: [isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading transactions...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 24\n        }, this) : /*#__PURE__*/_jsxDEV(Transactions, {\n          transactions: transactions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 61\n        }, this), isAllEmployees && (paginatedTransactions === null || paginatedTransactions === void 0 ? void 0 : paginatedTransactions.nextPage) && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"RampButton\",\n          onClick: async () => {\n            await fetchPaginatedTransactions();\n          },\n          disabled: isLoading || paginatedLoading,\n          children: \"View More\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"cm1ArClqdVhu6BEdFwN3IcA0sVA=\", false, function () {\n  return [useEmployees, usePaginatedTransactions, useTransactionsByEmployee];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Fragment","useCallback","useEffect","useMemo","useState","InputSelect","Instructions","Transactions","useEmployees","usePaginatedTransactions","useTransactionsByEmployee","EMPTY_EMPLOYEE","jsxDEV","_jsxDEV","App","_s","data","employees","loading","employeesLoading","fetchAll","fetchEmployees","paginatedTransactions","paginatedLoading","fetchPaginatedTransactions","invalidateData","invalidatePaginatedData","transactionsByEmployee","fetchById","fetchTransactionsByEmployee","invalidateEmployeeData","isLoading","setIsLoading","isAllEmployees","setIsAllEmployees","transactions","console","log","loadAllTransactions","loadTransactionsByEmployee","employeeId","handleEmployeeChange","newValue","id","children","className","fileName","_jsxFileName","lineNumber","columnNumber","defaultValue","items","label","loadingLabel","parseItem","item","value","firstName","lastName","onChange","nextPage","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/roderickmoise/Desktop/Documents/Downloads/ramp-fe-challenge/src/App.tsx"],"sourcesContent":["import { Fragment, useCallback, useEffect, useMemo, useState } from \"react\"\nimport { InputSelect } from \"./components/InputSelect\"\nimport { Instructions } from \"./components/Instructions\"\nimport { Transactions } from \"./components/Transactions\"\nimport { useEmployees } from \"./hooks/useEmployees\"\nimport { usePaginatedTransactions } from \"./hooks/usePaginatedTransactions\"\nimport { useTransactionsByEmployee } from \"./hooks/useTransactionsByEmployee\"\nimport { EMPTY_EMPLOYEE } from \"./utils/constants\"\nimport { Employee } from \"./utils/types\"\n\nexport function App() {\n  const { data: employees, loading: employeesLoading, fetchAll: fetchEmployees } = useEmployees()\n  const {\n    data: paginatedTransactions,\n    loading: paginatedLoading,\n    fetchAll: fetchPaginatedTransactions,\n    invalidateData: invalidatePaginatedData,\n  } = usePaginatedTransactions()\n  const {\n    data: transactionsByEmployee,\n    fetchById: fetchTransactionsByEmployee,\n    invalidateData: invalidateEmployeeData,\n  } = useTransactionsByEmployee()\n\n  const [isLoading, setIsLoading] = useState(false)\n  const [isAllEmployees, setIsAllEmployees] = useState(true)\n\n  const transactions = useMemo(() => {\n    console.log(\"Transactions:\", isAllEmployees ? paginatedTransactions?.data : transactionsByEmployee)\n    return isAllEmployees ? paginatedTransactions?.data || [] : transactionsByEmployee || []\n  }, [isAllEmployees, paginatedTransactions, transactionsByEmployee])\n\n  const loadAllTransactions = useCallback(async () => {\n    setIsLoading(true)\n    await fetchEmployees()\n    await fetchPaginatedTransactions()\n    setIsLoading(false)\n  }, [fetchEmployees, fetchPaginatedTransactions])\n\n  const loadTransactionsByEmployee = useCallback(\n    async (employeeId: string) => {\n      await fetchTransactionsByEmployee(employeeId)\n    },\n    [fetchTransactionsByEmployee]\n  )\n\n  useEffect(() => {\n    if (!employees && !employeesLoading) {\n      loadAllTransactions()\n    }\n  }, [employees, employeesLoading, loadAllTransactions])\n\n  const handleEmployeeChange = useCallback(\n    async (newValue: Employee | null) => {\n      setIsLoading(true)\n      if (!newValue || newValue.id === \"all-employees\") {\n        console.log(\"Switching to All Employees.\")\n        setIsAllEmployees(true)\n        await loadAllTransactions()\n      } else {\n        console.log(`Fetching transactions for employee ID: ${newValue.id}`)\n        setIsAllEmployees(false)\n        await loadTransactionsByEmployee(newValue.id)\n      }\n      setIsLoading(false)\n    },\n    [loadAllTransactions, loadTransactionsByEmployee]\n  )\n\n  return (\n    <Fragment>\n      <main className=\"MainContainer\">\n        <Instructions />\n        <hr className=\"RampBreak--l\" />\n        <InputSelect<Employee>\n          isLoading={isLoading || employeesLoading}\n          defaultValue={EMPTY_EMPLOYEE}\n          items={employees ? [EMPTY_EMPLOYEE, ...employees] : []}\n          label=\"Filter by employee\"\n          loadingLabel=\"Loading employees...\"\n          parseItem={(item) => ({\n            value: item.id,\n            label: `${item.firstName} ${item.lastName}`,\n          })}\n          onChange={handleEmployeeChange}\n        />\n        <div className=\"RampBreak--l\" />\n        <div className=\"RampGrid\">\n          {isLoading ? <div>Loading transactions...</div> : <Transactions transactions={transactions} />}\n          {isAllEmployees && paginatedTransactions?.nextPage && (\n            <button\n              className=\"RampButton\"\n              onClick={async () => {\n                await fetchPaginatedTransactions()\n              }}\n              disabled={isLoading || paginatedLoading}\n            >\n              View More\n            </button>\n          )}\n        </div>\n      </main>\n    </Fragment>\n  )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}