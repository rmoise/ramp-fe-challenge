{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useState } from \"react\";\nimport { useCustomFetch } from \"./useCustomFetch\";\nexport function usePaginatedTransactions() {\n  _s();\n  const {\n    fetchWithCache,\n    loading\n  } = useCustomFetch();\n  const [paginatedTransactions, setPaginatedTransactions] = useState(null);\n  const fetchAll = useCallback(async () => {\n    const params = {\n      page: paginatedTransactions ? paginatedTransactions.nextPage : 0\n    };\n    const response = await fetchWithCache(\"paginatedTransactions\", params);\n    setPaginatedTransactions(prev => ({\n      data: [...((prev === null || prev === void 0 ? void 0 : prev.data) || []), ...((response === null || response === void 0 ? void 0 : response.data) || [])],\n      nextPage: response === null || response === void 0 ? void 0 : response.nextPage\n    }));\n  }, [fetchWithCache, paginatedTransactions]);\n  return {\n    data: paginatedTransactions,\n    loading,\n    fetchAll\n  };\n}\n_s(usePaginatedTransactions, \"OkeD1spyriBJ3C9m3Tkql81CG40=\", false, function () {\n  return [useCustomFetch];\n});","map":{"version":3,"names":["useCallback","useState","useCustomFetch","usePaginatedTransactions","_s","fetchWithCache","loading","paginatedTransactions","setPaginatedTransactions","fetchAll","params","page","nextPage","response","prev","data"],"sources":["/Users/roderickmoise/Desktop/Documents/Downloads/ramp-fe-challenge/src/hooks/usePaginatedTransactions.ts"],"sourcesContent":["import { useCallback, useState } from \"react\";\nimport { PaginatedRequestParams, PaginatedResponse, Transaction } from \"../utils/types\";\nimport { useCustomFetch } from \"./useCustomFetch\";\n\nexport function usePaginatedTransactions() {\n  const { fetchWithCache, loading } = useCustomFetch();\n  const [paginatedTransactions, setPaginatedTransactions] = useState<PaginatedResponse<Transaction[]> | null>(null);\n\n  const fetchAll = useCallback(async () => {\n    const params: PaginatedRequestParams = {\n      page: paginatedTransactions ? paginatedTransactions.nextPage : 0,\n    };\n\n    const response = await fetchWithCache<PaginatedResponse<Transaction[]>, PaginatedRequestParams>(\n      \"paginatedTransactions\",\n      params\n    );\n\n    setPaginatedTransactions((prev) => ({\n      data: [...(prev?.data || []), ...(response?.data || [])],\n      nextPage: response?.nextPage,\n    }));\n  }, [fetchWithCache, paginatedTransactions]);\n\n  return { data: paginatedTransactions, loading, fetchAll };\n}\n"],"mappings":";AAAA,SAASA,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAE7C,SAASC,cAAc,QAAQ,kBAAkB;AAEjD,OAAO,SAASC,wBAAwBA,CAAA,EAAG;EAAAC,EAAA;EACzC,MAAM;IAAEC,cAAc;IAAEC;EAAQ,CAAC,GAAGJ,cAAc,CAAC,CAAC;EACpD,MAAM,CAACK,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGP,QAAQ,CAA0C,IAAI,CAAC;EAEjH,MAAMQ,QAAQ,GAAGT,WAAW,CAAC,YAAY;IACvC,MAAMU,MAA8B,GAAG;MACrCC,IAAI,EAAEJ,qBAAqB,GAAGA,qBAAqB,CAACK,QAAQ,GAAG;IACjE,CAAC;IAED,MAAMC,QAAQ,GAAG,MAAMR,cAAc,CACnC,uBAAuB,EACvBK,MACF,CAAC;IAEDF,wBAAwB,CAAEM,IAAI,KAAM;MAClCC,IAAI,EAAE,CAAC,IAAI,CAAAD,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEC,IAAI,KAAI,EAAE,CAAC,EAAE,IAAI,CAAAF,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEE,IAAI,KAAI,EAAE,CAAC,CAAC;MACxDH,QAAQ,EAAEC,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAED;IACtB,CAAC,CAAC,CAAC;EACL,CAAC,EAAE,CAACP,cAAc,EAAEE,qBAAqB,CAAC,CAAC;EAE3C,OAAO;IAAEQ,IAAI,EAAER,qBAAqB;IAAED,OAAO;IAAEG;EAAS,CAAC;AAC3D;AAACL,EAAA,CArBeD,wBAAwB;EAAA,QACFD,cAAc;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}