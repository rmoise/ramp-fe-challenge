{"ast":null,"code":"var _jsxFileName = \"/Users/roderickmoise/Desktop/Documents/Downloads/ramp-fe-challenge/src/components/InputSelect/index.tsx\",\n  _s = $RefreshSig$();\nimport Downshift from \"downshift\";\nimport { useCallback, useState } from \"react\";\nimport classNames from \"classnames\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function InputSelect({\n  label,\n  defaultValue,\n  onChange: consumerOnChange,\n  items,\n  parseItem,\n  isLoading,\n  loadingLabel\n}) {\n  _s();\n  const [selectedValue, setSelectedValue] = useState(defaultValue !== null && defaultValue !== void 0 ? defaultValue : null);\n  const [dropdownPosition, setDropdownPosition] = useState({\n    top: 0,\n    left: 0\n  });\n  const onChange = useCallback(selectedItem => {\n    const parsedSelectedItem = selectedItem ? parseItem(selectedItem) : null;\n    if (!parsedSelectedItem || parsedSelectedItem.value === \"all-employees\") {\n      // Handle \"All Employees\" selection\n      consumerOnChange(null); // Notify parent to load all transactions\n      setSelectedValue(null); // Update the internal state\n      return;\n    }\n\n    // Handle normal employee selection\n    consumerOnChange(selectedItem);\n    setSelectedValue(selectedItem);\n  }, [consumerOnChange, parseItem]);\n  return /*#__PURE__*/_jsxDEV(Downshift, {\n    id: \"RampSelect\",\n    onChange: onChange,\n    selectedItem: selectedValue,\n    itemToString: item => {\n      // Display \"All Employees\" if the selected item corresponds to it\n      if (!item) return \"Select\"; // When no item is selected\n      const parsedItem = parseItem(item);\n      return parsedItem.value === \"all-employees\" ? \"All Employees\" : parsedItem.label;\n    },\n    children: ({\n      getItemProps,\n      getLabelProps,\n      getMenuProps,\n      isOpen,\n      highlightedIndex,\n      selectedItem,\n      getToggleButtonProps\n    }) => {\n      const toggleProps = getToggleButtonProps();\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"RampInputSelect--root\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"RampText--s RampText--hushed\",\n          ...getLabelProps(),\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"RampBreak--xs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"RampInputSelect--input\",\n          onClick: event => {\n            setDropdownPosition(getDropdownPosition(event.target));\n            toggleProps.onClick(event);\n          },\n          children: [selectedItem ? itemToString(selectedItem) : \"Select\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classNames(\"RampInputSelect--dropdown-container\", {\n            \"RampInputSelect--dropdown-container-opened\": isOpen\n          }),\n          ...getMenuProps(),\n          style: {\n            top: dropdownPosition.top,\n            left: dropdownPosition.left\n          },\n          children: renderItems()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this);\n      function renderItems() {\n        if (!isOpen) {\n          return null;\n        }\n        if (isLoading) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"RampInputSelect--dropdown-item\",\n            children: [loadingLabel, \"...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 20\n          }, this);\n        }\n        if (items.length === 0) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"RampInputSelect--dropdown-item\",\n            children: \"No items\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 20\n          }, this);\n        }\n        return items.map((item, index) => {\n          const parsedItem = parseItem(item);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            ...getItemProps({\n              index,\n              item,\n              className: classNames(\"RampInputSelect--dropdown-item\", {\n                \"RampInputSelect--dropdown-item-highlighted\": highlightedIndex === index,\n                \"RampInputSelect--dropdown-item-selected\": selectedItem && selectedItem.id === parsedItem.value\n              })\n            }),\n            children: parsedItem.label\n          }, parsedItem.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this);\n        });\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(InputSelect, \"P/yBOClT+tikRlX+sSLK7WIsfTo=\");\n_c = InputSelect;\nconst getDropdownPosition = target => {\n  if (target instanceof Element) {\n    const {\n      top,\n      left\n    } = target.getBoundingClientRect();\n    const {\n      scrollY\n    } = window;\n    return {\n      top: scrollY + top + 63,\n      // Adjust the position as needed\n      left\n    };\n  }\n  return {\n    top: 0,\n    left: 0\n  };\n};\nvar _c;\n$RefreshReg$(_c, \"InputSelect\");","map":{"version":3,"names":["Downshift","useCallback","useState","classNames","jsxDEV","_jsxDEV","InputSelect","label","defaultValue","onChange","consumerOnChange","items","parseItem","isLoading","loadingLabel","_s","selectedValue","setSelectedValue","dropdownPosition","setDropdownPosition","top","left","selectedItem","parsedSelectedItem","value","id","itemToString","item","parsedItem","children","getItemProps","getLabelProps","getMenuProps","isOpen","highlightedIndex","getToggleButtonProps","toggleProps","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","event","getDropdownPosition","target","style","renderItems","length","map","index","_c","Element","getBoundingClientRect","scrollY","window","$RefreshReg$"],"sources":["/Users/roderickmoise/Desktop/Documents/Downloads/ramp-fe-challenge/src/components/InputSelect/index.tsx"],"sourcesContent":["import Downshift from \"downshift\"\nimport { useCallback, useState } from \"react\"\nimport classNames from \"classnames\"\nimport { DropdownPosition, GetDropdownPositionFn, InputSelectOnChange, InputSelectProps } from \"./types\"\n\nexport function InputSelect<TItem>({\n  label,\n  defaultValue,\n  onChange: consumerOnChange,\n  items,\n  parseItem,\n  isLoading,\n  loadingLabel,\n}: InputSelectProps<TItem>) {\n  const [selectedValue, setSelectedValue] = useState<TItem | null>(defaultValue ?? null)\n  const [dropdownPosition, setDropdownPosition] = useState<DropdownPosition>({\n    top: 0,\n    left: 0,\n  })\n\n  const onChange = useCallback<InputSelectOnChange<TItem>>(\n    (selectedItem) => {\n      const parsedSelectedItem = selectedItem ? parseItem(selectedItem) : null\n\n      if (!parsedSelectedItem || parsedSelectedItem.value === \"all-employees\") {\n        // Handle \"All Employees\" selection\n        consumerOnChange(null) // Notify parent to load all transactions\n        setSelectedValue(null) // Update the internal state\n        return\n      }\n\n      // Handle normal employee selection\n      consumerOnChange(selectedItem)\n      setSelectedValue(selectedItem)\n    },\n    [consumerOnChange, parseItem]\n  )\n\n  return (\n    <Downshift<TItem>\n      id=\"RampSelect\"\n      onChange={onChange}\n      selectedItem={selectedValue}\n      itemToString={(item) => {\n        // Display \"All Employees\" if the selected item corresponds to it\n        if (!item) return \"Select\" // When no item is selected\n        const parsedItem = parseItem(item)\n        return parsedItem.value === \"all-employees\" ? \"All Employees\" : parsedItem.label\n      }}\n    >\n      {({\n        getItemProps,\n        getLabelProps,\n        getMenuProps,\n        isOpen,\n        highlightedIndex,\n        selectedItem,\n        getToggleButtonProps,\n      }) => {\n        const toggleProps = getToggleButtonProps()\n\n        return (\n          <div className=\"RampInputSelect--root\">\n            <label className=\"RampText--s RampText--hushed\" {...getLabelProps()}>\n              {label}\n            </label>\n            <div className=\"RampBreak--xs\" />\n            <div\n              className=\"RampInputSelect--input\"\n              onClick={(event) => {\n                setDropdownPosition(getDropdownPosition(event.target))\n                toggleProps.onClick(event)\n              }}\n            >\n              {selectedItem ? itemToString(selectedItem) : \"Select\"} {/* Show correct label */}\n            </div>\n\n            <div\n              className={classNames(\"RampInputSelect--dropdown-container\", {\n                \"RampInputSelect--dropdown-container-opened\": isOpen,\n              })}\n              {...getMenuProps()}\n              style={{ top: dropdownPosition.top, left: dropdownPosition.left }}\n            >\n              {renderItems()}\n            </div>\n          </div>\n        )\n\n        function renderItems() {\n          if (!isOpen) {\n            return null\n          }\n\n          if (isLoading) {\n            return <div className=\"RampInputSelect--dropdown-item\">{loadingLabel}...</div>\n          }\n\n          if (items.length === 0) {\n            return <div className=\"RampInputSelect--dropdown-item\">No items</div>\n          }\n\n          return items.map((item, index) => {\n            const parsedItem = parseItem(item)\n            return (\n              <div\n                key={parsedItem.value}\n                {...getItemProps({\n                  index,\n                  item,\n                  className: classNames(\"RampInputSelect--dropdown-item\", {\n                    \"RampInputSelect--dropdown-item-highlighted\": highlightedIndex === index,\n                    \"RampInputSelect--dropdown-item-selected\":\n                      selectedItem && selectedItem.id === parsedItem.value,\n                  }),\n                })}\n              >\n                {parsedItem.label}\n              </div>\n            )\n          })\n        }\n      }}\n    </Downshift>\n  )\n}\n\nconst getDropdownPosition: GetDropdownPositionFn = (target) => {\n  if (target instanceof Element) {\n    const { top, left } = target.getBoundingClientRect()\n    const { scrollY } = window\n    return {\n      top: scrollY + top + 63, // Adjust the position as needed\n      left,\n    }\n  }\n\n  return { top: 0, left: 0 }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}