{"ast":null,"code":"var _jsxFileName = \"/Users/roderickmoise/Desktop/Documents/Downloads/ramp-fe-challenge/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { Fragment, useCallback, useEffect, useMemo, useState } from \"react\";\nimport { InputSelect } from \"./components/InputSelect\";\nimport { Instructions } from \"./components/Instructions\";\nimport { Transactions } from \"./components/Transactions\";\nimport { useEmployees } from \"./hooks/useEmployees\";\nimport { usePaginatedTransactions } from \"./hooks/usePaginatedTransactions\";\nimport { useTransactionsByEmployee } from \"./hooks/useTransactionsByEmployee\";\nimport { EMPTY_EMPLOYEE } from \"./utils/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function App() {\n  _s();\n  const {\n    data: employees,\n    ...employeeUtils\n  } = useEmployees();\n  const {\n    data: paginatedTransactions,\n    ...paginatedTransactionsUtils\n  } = usePaginatedTransactions();\n  const {\n    data: transactionsByEmployee,\n    ...transactionsByEmployeeUtils\n  } = useTransactionsByEmployee();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isAllEmployees, setIsAllEmployees] = useState(true);\n  const transactions = useMemo(() => {\n    return isAllEmployees ? (paginatedTransactions === null || paginatedTransactions === void 0 ? void 0 : paginatedTransactions.data) || [] : transactionsByEmployee || [];\n  }, [isAllEmployees, paginatedTransactions, transactionsByEmployee]);\n  const loadAllTransactions = useCallback(async () => {\n    setIsLoading(true);\n    await employeeUtils.fetchAll();\n    await paginatedTransactionsUtils.fetchAll();\n    setIsLoading(false);\n  }, [employeeUtils, paginatedTransactionsUtils]);\n  const loadTransactionsByEmployee = useCallback(async employeeId => {\n    await transactionsByEmployeeUtils.fetchById(employeeId);\n  }, [transactionsByEmployeeUtils]);\n  useEffect(() => {\n    const initialize = async () => {\n      if (!employees && !employeeUtils.loading) {\n        await loadAllTransactions();\n      }\n    };\n    initialize();\n  }, [employees, employeeUtils.loading, loadAllTransactions]);\n  const handleEmployeeChange = useCallback(async newValue => {\n    setIsLoading(true); // Start loading indicator\n\n    if (!newValue || newValue.id === \"all-employees\") {\n      // Switching to \"All Employees\" mode\n      console.log(\"Switching to All Employees.\");\n      setIsAllEmployees(true);\n      await paginatedTransactionsUtils.invalidateData(); // Clear previous transactions\n      await loadAllTransactions(); // Load all transactions for all employees\n    } else {\n      // Fetch transactions for a specific employee\n      console.log(`Fetching transactions for employee ID: ${newValue.id}`);\n      setIsAllEmployees(false);\n      await loadTransactionsByEmployee(newValue.id); // Load transactions for the selected employee\n    }\n    setIsLoading(false); // Stop loading indicator\n  }, [loadAllTransactions, loadTransactionsByEmployee, paginatedTransactionsUtils]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"MainContainer\",\n      children: [/*#__PURE__*/_jsxDEV(Instructions, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"RampBreak--l\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputSelect, {\n        isLoading: isLoading,\n        defaultValue: EMPTY_EMPLOYEE,\n        items: employees ? [EMPTY_EMPLOYEE, ...employees] : [],\n        label: \"Filter by employee\",\n        loadingLabel: \"Loading employees...\",\n        parseItem: item => ({\n          value: item.id,\n          label: `${item.firstName} ${item.lastName}`\n        }),\n        onChange: handleEmployeeChange // Handle employee selection\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"RampBreak--l\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"RampGrid\",\n        children: [isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading transactions...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Transactions, {\n          transactions: transactions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), isAllEmployees && (paginatedTransactions === null || paginatedTransactions === void 0 ? void 0 : paginatedTransactions.nextPage) && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"RampButton\",\n          onClick: async () => {\n            await paginatedTransactionsUtils.fetchAll(); // Load more transactions\n          },\n          disabled: isLoading || paginatedTransactionsUtils.loading,\n          children: \"View More\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"E0newMj/538StmiVrEP6vNB2NQk=\", false, function () {\n  return [useEmployees, usePaginatedTransactions, useTransactionsByEmployee];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Fragment","useCallback","useEffect","useMemo","useState","InputSelect","Instructions","Transactions","useEmployees","usePaginatedTransactions","useTransactionsByEmployee","EMPTY_EMPLOYEE","jsxDEV","_jsxDEV","App","_s","data","employees","employeeUtils","paginatedTransactions","paginatedTransactionsUtils","transactionsByEmployee","transactionsByEmployeeUtils","isLoading","setIsLoading","isAllEmployees","setIsAllEmployees","transactions","loadAllTransactions","fetchAll","loadTransactionsByEmployee","employeeId","fetchById","initialize","loading","handleEmployeeChange","newValue","id","console","log","invalidateData","children","className","fileName","_jsxFileName","lineNumber","columnNumber","defaultValue","items","label","loadingLabel","parseItem","item","value","firstName","lastName","onChange","nextPage","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/roderickmoise/Desktop/Documents/Downloads/ramp-fe-challenge/src/App.tsx"],"sourcesContent":["import { Fragment, useCallback, useEffect, useMemo, useState } from \"react\";\nimport { InputSelect } from \"./components/InputSelect\";\nimport { Instructions } from \"./components/Instructions\";\nimport { Transactions } from \"./components/Transactions\";\nimport { useEmployees } from \"./hooks/useEmployees\";\nimport { usePaginatedTransactions } from \"./hooks/usePaginatedTransactions\";\nimport { useTransactionsByEmployee } from \"./hooks/useTransactionsByEmployee\";\nimport { EMPTY_EMPLOYEE } from \"./utils/constants\";\nimport { Employee } from \"./utils/types\";\n\nexport function App() {\n  const { data: employees, ...employeeUtils } = useEmployees();\n  const { data: paginatedTransactions, ...paginatedTransactionsUtils } = usePaginatedTransactions();\n  const { data: transactionsByEmployee, ...transactionsByEmployeeUtils } = useTransactionsByEmployee();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [isAllEmployees, setIsAllEmployees] = useState(true);\n\n  const transactions = useMemo(() => {\n    return isAllEmployees ? paginatedTransactions?.data || [] : transactionsByEmployee || [];\n  }, [isAllEmployees, paginatedTransactions, transactionsByEmployee]);\n\n  const loadAllTransactions = useCallback(async () => {\n    setIsLoading(true);\n    await employeeUtils.fetchAll();\n    await paginatedTransactionsUtils.fetchAll();\n    setIsLoading(false);\n  }, [employeeUtils, paginatedTransactionsUtils]);\n\n  const loadTransactionsByEmployee = useCallback(async (employeeId: string) => {\n    await transactionsByEmployeeUtils.fetchById(employeeId);\n  }, [transactionsByEmployeeUtils]);\n\n  useEffect(() => {\n    const initialize = async () => {\n      if (!employees && !employeeUtils.loading) {\n        await loadAllTransactions();\n      }\n    };\n\n    initialize();\n  }, [employees, employeeUtils.loading, loadAllTransactions]);\n\n  const handleEmployeeChange = useCallback(\n    async (newValue: Employee | null) => {\n      setIsLoading(true); // Start loading indicator\n\n      if (!newValue || newValue.id === \"all-employees\") {\n        // Switching to \"All Employees\" mode\n        console.log(\"Switching to All Employees.\");\n        setIsAllEmployees(true);\n        await paginatedTransactionsUtils.invalidateData(); // Clear previous transactions\n        await loadAllTransactions(); // Load all transactions for all employees\n      } else {\n        // Fetch transactions for a specific employee\n        console.log(`Fetching transactions for employee ID: ${newValue.id}`);\n        setIsAllEmployees(false);\n        await loadTransactionsByEmployee(newValue.id); // Load transactions for the selected employee\n      }\n\n      setIsLoading(false); // Stop loading indicator\n    },\n    [loadAllTransactions, loadTransactionsByEmployee, paginatedTransactionsUtils]\n  );\n\n  return (\n    <Fragment>\n      <main className=\"MainContainer\">\n        <Instructions />\n        <hr className=\"RampBreak--l\" />\n\n        <InputSelect<Employee>\n          isLoading={isLoading}\n          defaultValue={EMPTY_EMPLOYEE}\n          items={employees ? [EMPTY_EMPLOYEE, ...employees] : []}\n          label=\"Filter by employee\"\n          loadingLabel=\"Loading employees...\"\n          parseItem={(item) => ({\n            value: item.id,\n            label: `${item.firstName} ${item.lastName}`,\n          })}\n          onChange={handleEmployeeChange} // Handle employee selection\n        />\n\n        <div className=\"RampBreak--l\" />\n\n        <div className=\"RampGrid\">\n          {isLoading ? (\n            <div>Loading transactions...</div>\n          ) : (\n            <Transactions transactions={transactions} />\n          )}\n\n          {isAllEmployees && paginatedTransactions?.nextPage && (\n            <button\n              className=\"RampButton\"\n              onClick={async () => {\n                await paginatedTransactionsUtils.fetchAll(); // Load more transactions\n              }}\n              disabled={isLoading || paginatedTransactionsUtils.loading}\n            >\n              View More\n            </button>\n          )}\n        </div>\n      </main>\n    </Fragment>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}