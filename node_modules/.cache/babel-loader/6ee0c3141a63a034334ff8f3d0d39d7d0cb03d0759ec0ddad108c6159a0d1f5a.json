{"ast":null,"code":"var _jsxFileName = \"/Users/roderickmoise/Desktop/Documents/Downloads/ramp-fe-challenge/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { useEmployees } from \"./hooks/useEmployees\";\nimport { usePaginatedTransactions } from \"./hooks/usePaginatedTransactions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Ensure you import Employee type\n\nexport function App() {\n  _s();\n  const {\n    data: employees,\n    fetchAll: fetchEmployees\n  } = useEmployees();\n  const {\n    data: paginatedTransactions,\n    fetchAll: fetchPaginatedTransactions,\n    loading\n  } = usePaginatedTransactions();\n\n  // Fetch employees on mount\n  useEffect(() => {\n    if (!employees) {\n      fetchEmployees();\n    }\n  }, [employees, fetchEmployees]);\n\n  // Fetch all transactions when \"All Employees\" is selected\n  const handleEmployeeChange = async selectedEmployee => {\n    // Define the type explicitly\n    if (!selectedEmployee || selectedEmployee.id === \"all-employees\") {\n      // Fetch transactions for all employees\n      await fetchPaginatedTransactions();\n    } else {\n      // Fetch transactions for the selected employee\n      console.log(`Fetching transactions for employee ID: ${selectedEmployee.id}`);\n      // Call the function to fetch transactions for this employee\n      // You may need to implement a separate function to fetch transactions by employee\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: paginatedTransactions && paginatedTransactions.data.map(transaction => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [transaction.merchant, \" - \", transaction.amount]\n      }, transaction.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"rUDOyW7jj4xkOnWRQc0vO6QqrVY=\", false, function () {\n  return [useEmployees, usePaginatedTransactions];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useEmployees","usePaginatedTransactions","jsxDEV","_jsxDEV","App","_s","data","employees","fetchAll","fetchEmployees","paginatedTransactions","fetchPaginatedTransactions","loading","handleEmployeeChange","selectedEmployee","id","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","map","transaction","merchant","amount","_c","$RefreshReg$"],"sources":["/Users/roderickmoise/Desktop/Documents/Downloads/ramp-fe-challenge/src/App.tsx"],"sourcesContent":["import { useEffect } from \"react\"\nimport { useEmployees } from \"./hooks/useEmployees\"\nimport { usePaginatedTransactions } from \"./hooks/usePaginatedTransactions\"\nimport { Employee } from \"./utils/types\" // Ensure you import Employee type\n\nexport function App() {\n  const { data: employees, fetchAll: fetchEmployees } = useEmployees()\n  const {\n    data: paginatedTransactions,\n    fetchAll: fetchPaginatedTransactions,\n    loading,\n  } = usePaginatedTransactions()\n\n  // Fetch employees on mount\n  useEffect(() => {\n    if (!employees) {\n      fetchEmployees()\n    }\n  }, [employees, fetchEmployees])\n\n  // Fetch all transactions when \"All Employees\" is selected\n  const handleEmployeeChange = async (selectedEmployee: Employee | null) => {\n    // Define the type explicitly\n    if (!selectedEmployee || selectedEmployee.id === \"all-employees\") {\n      // Fetch transactions for all employees\n      await fetchPaginatedTransactions()\n    } else {\n      // Fetch transactions for the selected employee\n      console.log(`Fetching transactions for employee ID: ${selectedEmployee.id}`)\n      // Call the function to fetch transactions for this employee\n      // You may need to implement a separate function to fetch transactions by employee\n    }\n  }\n\n  return (\n    <div>\n      {/* Your dropdown component here, passing in handleEmployeeChange */}\n      {/* Example usage of loading and paginatedTransactions */}\n      {loading ? (\n        <div>Loading...</div>\n      ) : (\n        <div>\n          {paginatedTransactions &&\n            paginatedTransactions.data.map((transaction) => (\n              <div key={transaction.id}>\n                {/* Render your transaction details here */}\n                {transaction.merchant} - {transaction.amount}\n              </div>\n            ))}\n        </div>\n      )}\n      {/* Your input select for employee filtering */}\n      {/* <InputSelect\n          onChange={handleEmployeeChange}\n          items={employees}\n          ...otherProps\n      /> */}\n    </div>\n  )\n}\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,YAAY,QAAQ,sBAAsB;AACnD,SAASC,wBAAwB,QAAQ,kCAAkC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAClC;;AAEzC,OAAO,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM;IAAEC,IAAI,EAAEC,SAAS;IAAEC,QAAQ,EAAEC;EAAe,CAAC,GAAGT,YAAY,CAAC,CAAC;EACpE,MAAM;IACJM,IAAI,EAAEI,qBAAqB;IAC3BF,QAAQ,EAAEG,0BAA0B;IACpCC;EACF,CAAC,GAAGX,wBAAwB,CAAC,CAAC;;EAE9B;EACAF,SAAS,CAAC,MAAM;IACd,IAAI,CAACQ,SAAS,EAAE;MACdE,cAAc,CAAC,CAAC;IAClB;EACF,CAAC,EAAE,CAACF,SAAS,EAAEE,cAAc,CAAC,CAAC;;EAE/B;EACA,MAAMI,oBAAoB,GAAG,MAAOC,gBAAiC,IAAK;IACxE;IACA,IAAI,CAACA,gBAAgB,IAAIA,gBAAgB,CAACC,EAAE,KAAK,eAAe,EAAE;MAChE;MACA,MAAMJ,0BAA0B,CAAC,CAAC;IACpC,CAAC,MAAM;MACL;MACAK,OAAO,CAACC,GAAG,CAAC,0CAA0CH,gBAAgB,CAACC,EAAE,EAAE,CAAC;MAC5E;MACA;IACF;EACF,CAAC;EAED,oBACEZ,OAAA;IAAAe,QAAA,EAGGN,OAAO,gBACNT,OAAA;MAAAe,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,gBAErBnB,OAAA;MAAAe,QAAA,EACGR,qBAAqB,IACpBA,qBAAqB,CAACJ,IAAI,CAACiB,GAAG,CAAEC,WAAW,iBACzCrB,OAAA;QAAAe,QAAA,GAEGM,WAAW,CAACC,QAAQ,EAAC,KAAG,EAACD,WAAW,CAACE,MAAM;MAAA,GAFpCF,WAAW,CAACT,EAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGnB,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EACN;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAOE,CAAC;AAEV;AAACjB,EAAA,CAtDeD,GAAG;EAAA,QACqCJ,YAAY,EAK9DC,wBAAwB;AAAA;AAAA0B,EAAA,GANdvB,GAAG;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}