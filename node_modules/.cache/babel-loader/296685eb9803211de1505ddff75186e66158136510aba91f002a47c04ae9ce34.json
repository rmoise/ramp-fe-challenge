{"ast":null,"code":"const handleEmployeeChange = useCallback(async newValue => {\n  setIsLoading(true); // Start loading indicator\n\n  if (!newValue || newValue.id === \"all-employees\") {\n    // Switching to \"All Employees\" mode\n    console.log(\"Switching to All Employees.\");\n    setIsAllEmployees(true);\n\n    // Invalidate previous employee-specific transactions\n    transactionsByEmployeeUtils.invalidateData();\n\n    // Fetch all transactions for all employees\n    await paginatedTransactionsUtils.fetchAll();\n  } else {\n    // Fetch transactions for a specific employee\n    console.log(`Fetching transactions for employee ID: ${newValue.id}`);\n    setIsAllEmployees(false);\n    await transactionsByEmployeeUtils.fetchById(newValue.id);\n  }\n  setIsLoading(false); // Stop loading indicator\n}, [paginatedTransactionsUtils, transactionsByEmployeeUtils]);","map":{"version":3,"names":["handleEmployeeChange","useCallback","newValue","setIsLoading","id","console","log","setIsAllEmployees","transactionsByEmployeeUtils","invalidateData","paginatedTransactionsUtils","fetchAll","fetchById"],"sources":["/Users/roderickmoise/Desktop/Documents/Downloads/ramp-fe-challenge/src/App.tsx"],"sourcesContent":["const handleEmployeeChange = useCallback(\n  async (newValue: Employee | null) => {\n    setIsLoading(true) // Start loading indicator\n\n    if (!newValue || newValue.id === \"all-employees\") {\n      // Switching to \"All Employees\" mode\n      console.log(\"Switching to All Employees.\")\n      setIsAllEmployees(true)\n\n      // Invalidate previous employee-specific transactions\n      transactionsByEmployeeUtils.invalidateData()\n\n      // Fetch all transactions for all employees\n      await paginatedTransactionsUtils.fetchAll()\n    } else {\n      // Fetch transactions for a specific employee\n      console.log(`Fetching transactions for employee ID: ${newValue.id}`)\n      setIsAllEmployees(false)\n      await transactionsByEmployeeUtils.fetchById(newValue.id)\n    }\n\n    setIsLoading(false) // Stop loading indicator\n  },\n  [paginatedTransactionsUtils, transactionsByEmployeeUtils]\n)\n"],"mappings":"AAAA,MAAMA,oBAAoB,GAAGC,WAAW,CACtC,MAAOC,QAAyB,IAAK;EACnCC,YAAY,CAAC,IAAI,CAAC,EAAC;;EAEnB,IAAI,CAACD,QAAQ,IAAIA,QAAQ,CAACE,EAAE,KAAK,eAAe,EAAE;IAChD;IACAC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;IAC1CC,iBAAiB,CAAC,IAAI,CAAC;;IAEvB;IACAC,2BAA2B,CAACC,cAAc,CAAC,CAAC;;IAE5C;IACA,MAAMC,0BAA0B,CAACC,QAAQ,CAAC,CAAC;EAC7C,CAAC,MAAM;IACL;IACAN,OAAO,CAACC,GAAG,CAAC,0CAA0CJ,QAAQ,CAACE,EAAE,EAAE,CAAC;IACpEG,iBAAiB,CAAC,KAAK,CAAC;IACxB,MAAMC,2BAA2B,CAACI,SAAS,CAACV,QAAQ,CAACE,EAAE,CAAC;EAC1D;EAEAD,YAAY,CAAC,KAAK,CAAC,EAAC;AACtB,CAAC,EACD,CAACO,0BAA0B,EAAEF,2BAA2B,CAC1D,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}