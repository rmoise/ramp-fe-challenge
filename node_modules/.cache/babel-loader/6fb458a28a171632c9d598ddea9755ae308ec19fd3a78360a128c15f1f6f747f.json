{"ast":null,"code":"var _jsxFileName = \"/Users/roderickmoise/Desktop/Documents/Downloads/ramp-fe-challenge/src/components/InputSelect/index.tsx\",\n  _s = $RefreshSig$();\nimport Downshift from \"downshift\";\nimport { useCallback, useState } from \"react\";\nimport classNames from \"classnames\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Ensure these types are correctly imported\n\nexport function InputSelect({\n  label,\n  defaultValue,\n  onChange: consumerOnChange,\n  items,\n  parseItem,\n  isLoading,\n  loadingLabel\n}) {\n  _s();\n  const [selectedValue, setSelectedValue] = useState(defaultValue !== null && defaultValue !== void 0 ? defaultValue : null);\n  const [dropdownPosition, setDropdownPosition] = useState({\n    top: 0,\n    left: 0\n  });\n  const onChange = useCallback(selectedItem => {\n    const parsedSelectedItem = selectedItem ? parseItem(selectedItem) : null;\n    if (!parsedSelectedItem || parsedSelectedItem.value === \"all-employees\") {\n      console.log(\"All Employees selected\");\n      consumerOnChange(null); // Notify parent to load all transactions\n      setSelectedValue({\n        id: \"all-employees\",\n        firstName: \"All\",\n        lastName: \"Employees\"\n      });\n      return;\n    }\n    consumerOnChange(selectedItem);\n    setSelectedValue(selectedItem);\n  }, [consumerOnChange, parseItem]);\n  return /*#__PURE__*/_jsxDEV(Downshift, {\n    id: \"RampSelect\",\n    onChange: onChange,\n    selectedItem: selectedValue,\n    itemToString: item => item ? parseItem(item).label : \"Select\",\n    children: ({\n      getItemProps,\n      getLabelProps,\n      getMenuProps,\n      isOpen,\n      highlightedIndex,\n      selectedItem,\n      getToggleButtonProps\n    }) => {\n      const toggleProps = getToggleButtonProps();\n      const parsedSelectedItem = selectedItem === null ? null : parseItem(selectedItem);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"RampInputSelect--root\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"RampText--s RampText--hushed\",\n          ...getLabelProps(),\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"RampBreak--xs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"RampInputSelect--input\",\n          onClick: event => {\n            setDropdownPosition(getDropdownPosition(event.target));\n            toggleProps.onClick(event);\n          },\n          children: parsedSelectedItem ? parsedSelectedItem.label : \"Select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classNames(\"RampInputSelect--dropdown-container\", {\n            \"RampInputSelect--dropdown-container-opened\": isOpen\n          }),\n          ...getMenuProps(),\n          style: {\n            top: dropdownPosition.top,\n            left: dropdownPosition.left\n          },\n          children: renderItems()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this);\n      function renderItems() {\n        if (!isOpen) {\n          return null;\n        }\n        if (isLoading) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"RampInputSelect--dropdown-item\",\n            children: [loadingLabel, \"...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 20\n          }, this);\n        }\n        if (items.length === 0) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"RampInputSelect--dropdown-item\",\n            children: \"No items\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 20\n          }, this);\n        }\n        return items.map((item, index) => {\n          const parsedItem = parseItem(item);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            ...getItemProps({\n              index,\n              item,\n              className: classNames(\"RampInputSelect--dropdown-item\", {\n                \"RampInputSelect--dropdown-item-highlighted\": highlightedIndex === index,\n                \"RampInputSelect--dropdown-item-selected\": (parsedSelectedItem === null || parsedSelectedItem === void 0 ? void 0 : parsedSelectedItem.value) === parsedItem.value\n              })\n            }),\n            children: parsedItem.label\n          }, parsedItem.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this);\n        });\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(InputSelect, \"P/yBOClT+tikRlX+sSLK7WIsfTo=\");\n_c = InputSelect;\nconst getDropdownPosition = target => {\n  if (target instanceof Element) {\n    const {\n      top,\n      left\n    } = target.getBoundingClientRect();\n    const {\n      scrollY\n    } = window;\n    return {\n      top: scrollY + top + 63,\n      left\n    };\n  }\n  return {\n    top: 0,\n    left: 0\n  };\n};\nvar _c;\n$RefreshReg$(_c, \"InputSelect\");","map":{"version":3,"names":["Downshift","useCallback","useState","classNames","jsxDEV","_jsxDEV","InputSelect","label","defaultValue","onChange","consumerOnChange","items","parseItem","isLoading","loadingLabel","_s","selectedValue","setSelectedValue","dropdownPosition","setDropdownPosition","top","left","selectedItem","parsedSelectedItem","value","console","log","id","firstName","lastName","itemToString","item","children","getItemProps","getLabelProps","getMenuProps","isOpen","highlightedIndex","getToggleButtonProps","toggleProps","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","event","getDropdownPosition","target","style","renderItems","length","map","index","parsedItem","_c","Element","getBoundingClientRect","scrollY","window","$RefreshReg$"],"sources":["/Users/roderickmoise/Desktop/Documents/Downloads/ramp-fe-challenge/src/components/InputSelect/index.tsx"],"sourcesContent":["import Downshift from \"downshift\"\nimport { useCallback, useState } from \"react\"\nimport classNames from \"classnames\"\nimport { InputSelectProps, DropdownPosition, GetDropdownPositionFn, InputSelectOnChange } from \"./types\" // Ensure these types are correctly imported\n\nexport function InputSelect<TItem>({\n  label,\n  defaultValue,\n  onChange: consumerOnChange,\n  items,\n  parseItem,\n  isLoading,\n  loadingLabel,\n}: InputSelectProps<TItem>) {\n  const [selectedValue, setSelectedValue] = useState<TItem | null>(defaultValue ?? null)\n  const [dropdownPosition, setDropdownPosition] = useState<DropdownPosition>({\n    top: 0,\n    left: 0,\n  })\n\n  const onChange = useCallback<InputSelectOnChange<TItem>>(\n    (selectedItem) => {\n      const parsedSelectedItem = selectedItem ? parseItem(selectedItem) : null\n\n      if (!parsedSelectedItem || parsedSelectedItem.value === \"all-employees\") {\n        console.log(\"All Employees selected\")\n        consumerOnChange(null) // Notify parent to load all transactions\n        setSelectedValue({ id: \"all-employees\", firstName: \"All\", lastName: \"Employees\" } as TItem)\n        return\n      }\n\n      consumerOnChange(selectedItem)\n      setSelectedValue(selectedItem)\n    },\n    [consumerOnChange, parseItem]\n  )\n\n  return (\n    <Downshift<TItem>\n      id=\"RampSelect\"\n      onChange={onChange}\n      selectedItem={selectedValue}\n      itemToString={(item) => (item ? parseItem(item).label : \"Select\")}\n    >\n      {({\n        getItemProps,\n        getLabelProps,\n        getMenuProps,\n        isOpen,\n        highlightedIndex,\n        selectedItem,\n        getToggleButtonProps,\n      }) => {\n        const toggleProps = getToggleButtonProps()\n        const parsedSelectedItem = selectedItem === null ? null : parseItem(selectedItem)\n\n        return (\n          <div className=\"RampInputSelect--root\">\n            <label className=\"RampText--s RampText--hushed\" {...getLabelProps()}>\n              {label}\n            </label>\n            <div className=\"RampBreak--xs\" />\n            <div\n              className=\"RampInputSelect--input\"\n              onClick={(event) => {\n                setDropdownPosition(getDropdownPosition(event.target))\n                toggleProps.onClick(event)\n              }}\n            >\n              {parsedSelectedItem ? parsedSelectedItem.label : \"Select\"}\n            </div>\n\n            <div\n              className={classNames(\"RampInputSelect--dropdown-container\", {\n                \"RampInputSelect--dropdown-container-opened\": isOpen,\n              })}\n              {...getMenuProps()}\n              style={{ top: dropdownPosition.top, left: dropdownPosition.left }}\n            >\n              {renderItems()}\n            </div>\n          </div>\n        )\n\n        function renderItems() {\n          if (!isOpen) {\n            return null\n          }\n\n          if (isLoading) {\n            return <div className=\"RampInputSelect--dropdown-item\">{loadingLabel}...</div>\n          }\n\n          if (items.length === 0) {\n            return <div className=\"RampInputSelect--dropdown-item\">No items</div>\n          }\n\n          return items.map((item, index) => {\n            const parsedItem = parseItem(item)\n            return (\n              <div\n                key={parsedItem.value}\n                {...getItemProps({\n                  index,\n                  item,\n                  className: classNames(\"RampInputSelect--dropdown-item\", {\n                    \"RampInputSelect--dropdown-item-highlighted\": highlightedIndex === index,\n                    \"RampInputSelect--dropdown-item-selected\":\n                      parsedSelectedItem?.value === parsedItem.value,\n                  }),\n                })}\n              >\n                {parsedItem.label}\n              </div>\n            )\n          })\n        }\n      }}\n    </Downshift>\n  )\n}\n\nconst getDropdownPosition: GetDropdownPositionFn = (target) => {\n  if (target instanceof Element) {\n    const { top, left } = target.getBoundingClientRect()\n    const { scrollY } = window\n    return {\n      top: scrollY + top + 63,\n      left,\n    }\n  }\n\n  return { top: 0, left: 0 }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}