{"ast":null,"code":"var _jsxFileName = \"/Users/roderickmoise/Desktop/Documents/Downloads/ramp-fe-challenge/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { Fragment, useCallback, useEffect, useMemo, useState } from \"react\";\nimport { InputSelect } from \"./components/InputSelect\";\nimport { Instructions } from \"./components/Instructions\";\nimport { Transactions } from \"./components/Transactions\";\nimport { useEmployees } from \"./hooks/useEmployees\";\nimport { usePaginatedTransactions } from \"./hooks/usePaginatedTransactions\";\nimport { useTransactionsByEmployee } from \"./hooks/useTransactionsByEmployee\";\nimport { EMPTY_EMPLOYEE } from \"./utils/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function App() {\n  _s();\n  const {\n    data: employees,\n    fetchAll: fetchEmployees,\n    loading: employeesLoading\n  } = useEmployees();\n  const {\n    data: paginatedTransactions,\n    fetchAll: fetchPaginatedTransactions\n  } = usePaginatedTransactions();\n  const {\n    data: transactionsByEmployee,\n    fetchById: fetchTransactionsByEmployee\n  } = useTransactionsByEmployee();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isAllEmployees, setIsAllEmployees] = useState(true);\n  const transactions = useMemo(() => {\n    return isAllEmployees ? (paginatedTransactions === null || paginatedTransactions === void 0 ? void 0 : paginatedTransactions.data) || [] : transactionsByEmployee || [];\n  }, [isAllEmployees, paginatedTransactions, transactionsByEmployee]);\n  const loadAllTransactions = useCallback(async () => {\n    setIsLoading(true);\n    console.log(\"Loading all transactions...\");\n    await fetchEmployees();\n    await fetchPaginatedTransactions();\n    setIsLoading(false);\n  }, [fetchEmployees, fetchPaginatedTransactions]);\n  const loadTransactionsByEmployee = useCallback(async employeeId => {\n    setIsLoading(true);\n    console.log(`Loading transactions for employee ID: ${employeeId}`);\n    await fetchTransactionsByEmployee(employeeId);\n    setIsLoading(false);\n  }, [fetchTransactionsByEmployee]);\n  useEffect(() => {\n    const initialize = async () => {\n      if (!employees && !employeesLoading) {\n        await loadAllTransactions();\n      }\n    };\n    initialize();\n  }, [employees, employeesLoading, loadAllTransactions]);\n  const handleEmployeeChange = useCallback(async newValue => {\n    setIsLoading(true); // Start loading indicator\n\n    if (!newValue || newValue.id === \"all-employees\") {\n      // Switching to \"All Employees\" mode\n      console.log(\"Switching to All Employees.\");\n      setIsAllEmployees(true);\n\n      // Invalidate previous employee-specific transactions\n      transactionsByEmployeeUtils.invalidateData();\n\n      // Fetch all transactions for all employees\n      await paginatedTransactionsUtils.fetchAll();\n    } else {\n      // Fetch transactions for a specific employee\n      console.log(`Fetching transactions for employee ID: ${newValue.id}`);\n      setIsAllEmployees(false);\n      await transactionsByEmployeeUtils.fetchById(newValue.id);\n    }\n    setIsLoading(false); // Stop loading indicator\n  }, [paginatedTransactionsUtils, transactionsByEmployeeUtils]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"MainContainer\",\n      children: [/*#__PURE__*/_jsxDEV(Instructions, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"RampBreak--l\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputSelect, {\n        isLoading: isLoading || employeesLoading,\n        defaultValue: EMPTY_EMPLOYEE,\n        items: employees ? [EMPTY_EMPLOYEE, ...employees] : [],\n        label: \"Filter by employee\",\n        loadingLabel: \"Loading employees...\",\n        parseItem: item => ({\n          value: item.id,\n          label: `${item.firstName} ${item.lastName}`\n        }),\n        onChange: handleEmployeeChange // Ensure this correctly calls the function\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"RampBreak--l\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"RampGrid\",\n        children: [isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading transactions...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 24\n        }, this) : /*#__PURE__*/_jsxDEV(Transactions, {\n          transactions: transactions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 61\n        }, this), isAllEmployees && (paginatedTransactions === null || paginatedTransactions === void 0 ? void 0 : paginatedTransactions.nextPage) && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"RampButton\",\n          onClick: async () => {\n            console.log(\"Loading more transactions...\");\n            await fetchPaginatedTransactions();\n          },\n          disabled: isLoading,\n          children: \"View More\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ap2IRqXyK5KhZRriMx1hMYV16YQ=\", false, function () {\n  return [useEmployees, usePaginatedTransactions, useTransactionsByEmployee];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Fragment","useCallback","useEffect","useMemo","useState","InputSelect","Instructions","Transactions","useEmployees","usePaginatedTransactions","useTransactionsByEmployee","EMPTY_EMPLOYEE","jsxDEV","_jsxDEV","App","_s","data","employees","fetchAll","fetchEmployees","loading","employeesLoading","paginatedTransactions","fetchPaginatedTransactions","transactionsByEmployee","fetchById","fetchTransactionsByEmployee","isLoading","setIsLoading","isAllEmployees","setIsAllEmployees","transactions","loadAllTransactions","console","log","loadTransactionsByEmployee","employeeId","initialize","handleEmployeeChange","newValue","id","transactionsByEmployeeUtils","invalidateData","paginatedTransactionsUtils","children","className","fileName","_jsxFileName","lineNumber","columnNumber","defaultValue","items","label","loadingLabel","parseItem","item","value","firstName","lastName","onChange","nextPage","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/roderickmoise/Desktop/Documents/Downloads/ramp-fe-challenge/src/App.tsx"],"sourcesContent":["import { Fragment, useCallback, useEffect, useMemo, useState } from \"react\"\nimport { InputSelect } from \"./components/InputSelect\"\nimport { Instructions } from \"./components/Instructions\"\nimport { Transactions } from \"./components/Transactions\"\nimport { useEmployees } from \"./hooks/useEmployees\"\nimport { usePaginatedTransactions } from \"./hooks/usePaginatedTransactions\"\nimport { useTransactionsByEmployee } from \"./hooks/useTransactionsByEmployee\"\nimport { EMPTY_EMPLOYEE } from \"./utils/constants\"\nimport { Employee } from \"./utils/types\"\n\nexport function App() {\n  const { data: employees, fetchAll: fetchEmployees, loading: employeesLoading } = useEmployees()\n  const { data: paginatedTransactions, fetchAll: fetchPaginatedTransactions } =\n    usePaginatedTransactions()\n  const { data: transactionsByEmployee, fetchById: fetchTransactionsByEmployee } =\n    useTransactionsByEmployee()\n\n  const [isLoading, setIsLoading] = useState(false)\n  const [isAllEmployees, setIsAllEmployees] = useState(true)\n\n  const transactions = useMemo(() => {\n    return isAllEmployees ? paginatedTransactions?.data || [] : transactionsByEmployee || []\n  }, [isAllEmployees, paginatedTransactions, transactionsByEmployee])\n\n  const loadAllTransactions = useCallback(async () => {\n    setIsLoading(true)\n    console.log(\"Loading all transactions...\")\n    await fetchEmployees()\n    await fetchPaginatedTransactions()\n    setIsLoading(false)\n  }, [fetchEmployees, fetchPaginatedTransactions])\n\n  const loadTransactionsByEmployee = useCallback(\n    async (employeeId: string) => {\n      setIsLoading(true)\n      console.log(`Loading transactions for employee ID: ${employeeId}`)\n      await fetchTransactionsByEmployee(employeeId)\n      setIsLoading(false)\n    },\n    [fetchTransactionsByEmployee]\n  )\n\n  useEffect(() => {\n    const initialize = async () => {\n      if (!employees && !employeesLoading) {\n        await loadAllTransactions()\n      }\n    }\n    initialize()\n  }, [employees, employeesLoading, loadAllTransactions])\n\n  const handleEmployeeChange = useCallback(\n  async (newValue: Employee | null) => {\n    setIsLoading(true); // Start loading indicator\n\n    if (!newValue || newValue.id === \"all-employees\") {\n      // Switching to \"All Employees\" mode\n      console.log(\"Switching to All Employees.\");\n      setIsAllEmployees(true);\n\n      // Invalidate previous employee-specific transactions\n      transactionsByEmployeeUtils.invalidateData();\n\n      // Fetch all transactions for all employees\n      await paginatedTransactionsUtils.fetchAll();\n    } else {\n      // Fetch transactions for a specific employee\n      console.log(`Fetching transactions for employee ID: ${newValue.id}`);\n      setIsAllEmployees(false);\n      await transactionsByEmployeeUtils.fetchById(newValue.id);\n    }\n\n    setIsLoading(false); // Stop loading indicator\n  },\n  [paginatedTransactionsUtils, transactionsByEmployeeUtils]\n);\n\n\n  return (\n    <Fragment>\n      <main className=\"MainContainer\">\n        <Instructions />\n        <hr className=\"RampBreak--l\" />\n        <InputSelect<Employee>\n          isLoading={isLoading || employeesLoading}\n          defaultValue={EMPTY_EMPLOYEE}\n          items={employees ? [EMPTY_EMPLOYEE, ...employees] : []}\n          label=\"Filter by employee\"\n          loadingLabel=\"Loading employees...\"\n          parseItem={(item) => ({\n            value: item.id,\n            label: `${item.firstName} ${item.lastName}`,\n          })}\n          onChange={handleEmployeeChange} // Ensure this correctly calls the function\n        />\n        <div className=\"RampBreak--l\" />\n        <div className=\"RampGrid\">\n          {isLoading ? <div>Loading transactions...</div> : <Transactions transactions={transactions} />}\n          {isAllEmployees && paginatedTransactions?.nextPage && (\n            <button\n              className=\"RampButton\"\n              onClick={async () => {\n                console.log(\"Loading more transactions...\")\n                await fetchPaginatedTransactions()\n              }}\n              disabled={isLoading}\n            >\n              View More\n            </button>\n          )}\n        </div>\n      </main>\n    </Fragment>\n  )\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,WAAW,EAAEC,SAAS,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AAC3E,SAASC,WAAW,QAAQ,0BAA0B;AACtD,SAASC,YAAY,QAAQ,2BAA2B;AACxD,SAASC,YAAY,QAAQ,2BAA2B;AACxD,SAASC,YAAY,QAAQ,sBAAsB;AACnD,SAASC,wBAAwB,QAAQ,kCAAkC;AAC3E,SAASC,yBAAyB,QAAQ,mCAAmC;AAC7E,SAASC,cAAc,QAAQ,mBAAmB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGlD,OAAO,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM;IAAEC,IAAI,EAAEC,SAAS;IAAEC,QAAQ,EAAEC,cAAc;IAAEC,OAAO,EAAEC;EAAiB,CAAC,GAAGb,YAAY,CAAC,CAAC;EAC/F,MAAM;IAAEQ,IAAI,EAAEM,qBAAqB;IAAEJ,QAAQ,EAAEK;EAA2B,CAAC,GACzEd,wBAAwB,CAAC,CAAC;EAC5B,MAAM;IAAEO,IAAI,EAAEQ,sBAAsB;IAAEC,SAAS,EAAEC;EAA4B,CAAC,GAC5EhB,yBAAyB,CAAC,CAAC;EAE7B,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACyB,cAAc,EAAEC,iBAAiB,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;EAE1D,MAAM2B,YAAY,GAAG5B,OAAO,CAAC,MAAM;IACjC,OAAO0B,cAAc,GAAG,CAAAP,qBAAqB,aAArBA,qBAAqB,uBAArBA,qBAAqB,CAAEN,IAAI,KAAI,EAAE,GAAGQ,sBAAsB,IAAI,EAAE;EAC1F,CAAC,EAAE,CAACK,cAAc,EAAEP,qBAAqB,EAAEE,sBAAsB,CAAC,CAAC;EAEnE,MAAMQ,mBAAmB,GAAG/B,WAAW,CAAC,YAAY;IAClD2B,YAAY,CAAC,IAAI,CAAC;IAClBK,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;IAC1C,MAAMf,cAAc,CAAC,CAAC;IACtB,MAAMI,0BAA0B,CAAC,CAAC;IAClCK,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC,EAAE,CAACT,cAAc,EAAEI,0BAA0B,CAAC,CAAC;EAEhD,MAAMY,0BAA0B,GAAGlC,WAAW,CAC5C,MAAOmC,UAAkB,IAAK;IAC5BR,YAAY,CAAC,IAAI,CAAC;IAClBK,OAAO,CAACC,GAAG,CAAC,yCAAyCE,UAAU,EAAE,CAAC;IAClE,MAAMV,2BAA2B,CAACU,UAAU,CAAC;IAC7CR,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC,EACD,CAACF,2BAA2B,CAC9B,CAAC;EAEDxB,SAAS,CAAC,MAAM;IACd,MAAMmC,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI,CAACpB,SAAS,IAAI,CAACI,gBAAgB,EAAE;QACnC,MAAMW,mBAAmB,CAAC,CAAC;MAC7B;IACF,CAAC;IACDK,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACpB,SAAS,EAAEI,gBAAgB,EAAEW,mBAAmB,CAAC,CAAC;EAEtD,MAAMM,oBAAoB,GAAGrC,WAAW,CACxC,MAAOsC,QAAyB,IAAK;IACnCX,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;;IAEpB,IAAI,CAACW,QAAQ,IAAIA,QAAQ,CAACC,EAAE,KAAK,eAAe,EAAE;MAChD;MACAP,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;MAC1CJ,iBAAiB,CAAC,IAAI,CAAC;;MAEvB;MACAW,2BAA2B,CAACC,cAAc,CAAC,CAAC;;MAE5C;MACA,MAAMC,0BAA0B,CAACzB,QAAQ,CAAC,CAAC;IAC7C,CAAC,MAAM;MACL;MACAe,OAAO,CAACC,GAAG,CAAC,0CAA0CK,QAAQ,CAACC,EAAE,EAAE,CAAC;MACpEV,iBAAiB,CAAC,KAAK,CAAC;MACxB,MAAMW,2BAA2B,CAAChB,SAAS,CAACc,QAAQ,CAACC,EAAE,CAAC;IAC1D;IAEAZ,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;EACvB,CAAC,EACD,CAACe,0BAA0B,EAAEF,2BAA2B,CAC1D,CAAC;EAGC,oBACE5B,OAAA,CAACb,QAAQ;IAAA4C,QAAA,eACP/B,OAAA;MAAMgC,SAAS,EAAC,eAAe;MAAAD,QAAA,gBAC7B/B,OAAA,CAACP,YAAY;QAAAwC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAChBpC,OAAA;QAAIgC,SAAS,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC/BpC,OAAA,CAACR,WAAW;QACVsB,SAAS,EAAEA,SAAS,IAAIN,gBAAiB;QACzC6B,YAAY,EAAEvC,cAAe;QAC7BwC,KAAK,EAAElC,SAAS,GAAG,CAACN,cAAc,EAAE,GAAGM,SAAS,CAAC,GAAG,EAAG;QACvDmC,KAAK,EAAC,oBAAoB;QAC1BC,YAAY,EAAC,sBAAsB;QACnCC,SAAS,EAAGC,IAAI,KAAM;UACpBC,KAAK,EAAED,IAAI,CAACf,EAAE;UACdY,KAAK,EAAE,GAAGG,IAAI,CAACE,SAAS,IAAIF,IAAI,CAACG,QAAQ;QAC3C,CAAC,CAAE;QACHC,QAAQ,EAAErB,oBAAqB,CAAC;MAAA;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC,CAAC,eACFpC,OAAA;QAAKgC,SAAS,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAChCpC,OAAA;QAAKgC,SAAS,EAAC,UAAU;QAAAD,QAAA,GACtBjB,SAAS,gBAAGd,OAAA;UAAA+B,QAAA,EAAK;QAAuB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,gBAAGpC,OAAA,CAACN,YAAY;UAACwB,YAAY,EAAEA;QAAa;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EAC7FpB,cAAc,KAAIP,qBAAqB,aAArBA,qBAAqB,uBAArBA,qBAAqB,CAAEsC,QAAQ,kBAChD/C,OAAA;UACEgC,SAAS,EAAC,YAAY;UACtBgB,OAAO,EAAE,MAAAA,CAAA,KAAY;YACnB5B,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;YAC3C,MAAMX,0BAA0B,CAAC,CAAC;UACpC,CAAE;UACFuC,QAAQ,EAAEnC,SAAU;UAAAiB,QAAA,EACrB;QAED;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CACT;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEf;AAAClC,EAAA,CAxGeD,GAAG;EAAA,QACgEN,YAAY,EAE3FC,wBAAwB,EAExBC,yBAAyB;AAAA;AAAAqD,EAAA,GALbjD,GAAG;AAAA,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}