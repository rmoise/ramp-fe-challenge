{"ast":null,"code":"var _jsxFileName = \"/Users/roderickmoise/Desktop/Documents/Downloads/ramp-fe-challenge/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { useEmployees } from \"./hooks/useEmployees\";\nimport { usePaginatedTransactions } from \"./hooks/usePaginatedTransactions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function App() {\n  _s();\n  const {\n    data: employees,\n    fetchAll: fetchEmployees\n  } = useEmployees();\n  const {\n    data: paginatedTransactions,\n    fetchAll: fetchPaginatedTransactions,\n    loading\n  } = usePaginatedTransactions();\n\n  // Fetch employees on mount\n  useEffect(() => {\n    if (!employees) {\n      fetchEmployees();\n    }\n  }, [employees, fetchEmployees]);\n\n  // Fetch all transactions when \"All Employees\" is selected\n  const handleEmployeeChange = async selectedEmployee => {\n    if (!selectedEmployee || selectedEmployee.id === \"all-employees\") {\n      // Fetch transactions for all employees\n      await fetchPaginatedTransactions();\n    } else {\n      // Fetch transactions for the selected employee\n      // Assume you have a function for this\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"rUDOyW7jj4xkOnWRQc0vO6QqrVY=\", false, function () {\n  return [useEmployees, usePaginatedTransactions];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useEmployees","usePaginatedTransactions","jsxDEV","_jsxDEV","App","_s","data","employees","fetchAll","fetchEmployees","paginatedTransactions","fetchPaginatedTransactions","loading","handleEmployeeChange","selectedEmployee","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/roderickmoise/Desktop/Documents/Downloads/ramp-fe-challenge/src/App.tsx"],"sourcesContent":["import { useEffect } from \"react\"\nimport { useEmployees } from \"./hooks/useEmployees\"\nimport { usePaginatedTransactions } from \"./hooks/usePaginatedTransactions\"\n\nexport function App() {\n  const { data: employees, fetchAll: fetchEmployees } = useEmployees()\n  const {\n    data: paginatedTransactions,\n    fetchAll: fetchPaginatedTransactions,\n    loading,\n  } = usePaginatedTransactions()\n\n  // Fetch employees on mount\n  useEffect(() => {\n    if (!employees) {\n      fetchEmployees()\n    }\n  }, [employees, fetchEmployees])\n\n  // Fetch all transactions when \"All Employees\" is selected\n  const handleEmployeeChange = async (selectedEmployee) => {\n    if (!selectedEmployee || selectedEmployee.id === \"all-employees\") {\n      // Fetch transactions for all employees\n      await fetchPaginatedTransactions()\n    } else {\n      // Fetch transactions for the selected employee\n      // Assume you have a function for this\n    }\n  }\n\n  return (\n    <div>\n      {/* Your input select and transaction display logic */}\n      {/* Call handleEmployeeChange on selection change */}\n    </div>\n  )\n}\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,YAAY,QAAQ,sBAAsB;AACnD,SAASC,wBAAwB,QAAQ,kCAAkC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3E,OAAO,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM;IAAEC,IAAI,EAAEC,SAAS;IAAEC,QAAQ,EAAEC;EAAe,CAAC,GAAGT,YAAY,CAAC,CAAC;EACpE,MAAM;IACJM,IAAI,EAAEI,qBAAqB;IAC3BF,QAAQ,EAAEG,0BAA0B;IACpCC;EACF,CAAC,GAAGX,wBAAwB,CAAC,CAAC;;EAE9B;EACAF,SAAS,CAAC,MAAM;IACd,IAAI,CAACQ,SAAS,EAAE;MACdE,cAAc,CAAC,CAAC;IAClB;EACF,CAAC,EAAE,CAACF,SAAS,EAAEE,cAAc,CAAC,CAAC;;EAE/B;EACA,MAAMI,oBAAoB,GAAG,MAAOC,gBAAgB,IAAK;IACvD,IAAI,CAACA,gBAAgB,IAAIA,gBAAgB,CAACC,EAAE,KAAK,eAAe,EAAE;MAChE;MACA,MAAMJ,0BAA0B,CAAC,CAAC;IACpC,CAAC,MAAM;MACL;MACA;IAAA;EAEJ,CAAC;EAED,oBACER,OAAA;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGK,CAAC;AAEV;AAACd,EAAA,CAhCeD,GAAG;EAAA,QACqCJ,YAAY,EAK9DC,wBAAwB;AAAA;AAAAmB,EAAA,GANdhB,GAAG;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}