{"ast":null,"code":"var _jsxFileName = \"/Users/roderickmoise/Desktop/Documents/Downloads/ramp-fe-challenge/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { Fragment, useEffect, useReducer } from \"react\";\nimport { InputSelect } from \"./components/InputSelect\";\nimport { Instructions } from \"./components/Instructions\";\nimport { Transactions } from \"./components/Transactions\";\nimport { useEmployees } from \"./hooks/useEmployees\";\nimport { usePaginatedTransactions } from \"./hooks/usePaginatedTransactions\";\nimport { useTransactionsByEmployee } from \"./hooks/useTransactionsByEmployee\";\nimport { EMPTY_EMPLOYEE } from \"./utils/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  isLoading: false,\n  isAllEmployees: true,\n  selectedEmployee: null,\n  paginatedTransactions: null,\n  transactionsByEmployee: null\n};\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"SET_LOADING\":\n      return {\n        ...state,\n        isLoading: action.payload\n      };\n    case \"SET_ALL_EMPLOYEES\":\n      return {\n        ...state,\n        isAllEmployees: true,\n        selectedEmployee: null,\n        paginatedTransactions: null\n      };\n    case \"SET_SELECTED_EMPLOYEE\":\n      return {\n        ...state,\n        selectedEmployee: action.payload,\n        isAllEmployees: false\n      };\n    case \"SET_PAGINATED_TRANSACTIONS\":\n      return {\n        ...state,\n        paginatedTransactions: action.payload\n      };\n    case \"SET_TRANSACTIONS_BY_EMPLOYEE\":\n      return {\n        ...state,\n        transactionsByEmployee: action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport function App() {\n  _s();\n  const [{\n    isLoading,\n    isAllEmployees,\n    selectedEmployee,\n    paginatedTransactions,\n    transactionsByEmployee\n  }, dispatch] = useReducer(reducer, initialState);\n  const {\n    data: employees,\n    fetchAll: fetchEmployees\n  } = useEmployees();\n  const {\n    fetchAll: fetchPaginatedTransactions\n  } = usePaginatedTransactions();\n  const {\n    fetchById: fetchTransactionsByEmployee\n  } = useTransactionsByEmployee();\n  useEffect(() => {\n    const fetchInitialData = async () => {\n      dispatch({\n        type: \"SET_LOADING\",\n        payload: true\n      });\n      await fetchEmployees();\n      await fetchPaginatedTransactions();\n      dispatch({\n        type: \"SET_LOADING\",\n        payload: false\n      });\n    };\n    fetchInitialData();\n  }, [fetchEmployees, fetchPaginatedTransactions]);\n  const handleEmployeeChange = async newValue => {\n    if (newValue === null || newValue.id === \"all-employees\") {\n      dispatch({\n        type: \"SET_ALL_EMPLOYEES\"\n      });\n      await fetchPaginatedTransactions(); // Load all transactions\n    } else if (newValue.id) {\n      dispatch({\n        type: \"SET_SELECTED_EMPLOYEE\",\n        payload: newValue\n      });\n      dispatch({\n        type: \"SET_LOADING\",\n        payload: true\n      });\n      await fetchTransactionsByEmployee(newValue.id); // Load specific employee's transactions\n      dispatch({\n        type: \"SET_LOADING\",\n        payload: false\n      });\n    }\n  };\n  const transactions = isAllEmployees ? (paginatedTransactions === null || paginatedTransactions === void 0 ? void 0 : paginatedTransactions.data) || [] : transactionsByEmployee || [];\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"MainContainer\",\n      children: [/*#__PURE__*/_jsxDEV(Instructions, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"RampBreak--l\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputSelect, {\n        isLoading: isLoading,\n        defaultValue: EMPTY_EMPLOYEE,\n        items: employees === null ? [] : [EMPTY_EMPLOYEE, ...employees],\n        label: \"Filter by employee\",\n        loadingLabel: \"Loading employees\",\n        parseItem: item => ({\n          value: item.id,\n          label: `${item.firstName} ${item.lastName}`\n        }),\n        onChange: handleEmployeeChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), selectedEmployee && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Selected Employee:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [selectedEmployee.firstName, \" \", selectedEmployee.lastName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"RampBreak--l\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"RampGrid\",\n        children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading transactions...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 24\n        }, this) : /*#__PURE__*/_jsxDEV(Transactions, {\n          transactions: transactions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 61\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"AERP1LNPlsP+Iv0D2rwcizp51tA=\", false, function () {\n  return [useEmployees, usePaginatedTransactions, useTransactionsByEmployee];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Fragment","useEffect","useReducer","InputSelect","Instructions","Transactions","useEmployees","usePaginatedTransactions","useTransactionsByEmployee","EMPTY_EMPLOYEE","jsxDEV","_jsxDEV","initialState","isLoading","isAllEmployees","selectedEmployee","paginatedTransactions","transactionsByEmployee","reducer","state","action","type","payload","App","_s","dispatch","data","employees","fetchAll","fetchEmployees","fetchPaginatedTransactions","fetchById","fetchTransactionsByEmployee","fetchInitialData","handleEmployeeChange","newValue","id","transactions","children","className","fileName","_jsxFileName","lineNumber","columnNumber","defaultValue","items","label","loadingLabel","parseItem","item","value","firstName","lastName","onChange","_c","$RefreshReg$"],"sources":["/Users/roderickmoise/Desktop/Documents/Downloads/ramp-fe-challenge/src/App.tsx"],"sourcesContent":["import { Fragment, useEffect, useReducer } from \"react\"\nimport { InputSelect } from \"./components/InputSelect\"\nimport { Instructions } from \"./components/Instructions\"\nimport { Transactions } from \"./components/Transactions\"\nimport { useEmployees } from \"./hooks/useEmployees\"\nimport { usePaginatedTransactions } from \"./hooks/usePaginatedTransactions\"\nimport { useTransactionsByEmployee } from \"./hooks/useTransactionsByEmployee\"\nimport { EMPTY_EMPLOYEE } from \"./utils/constants\"\nimport { Employee } from \"./utils/types\"\n\ntype State = {\n  isLoading: boolean\n  isAllEmployees: boolean\n  selectedEmployee: Employee | null\n  paginatedTransactions: any // Define your structure here\n  transactionsByEmployee: any // Define your structure here\n}\n\nconst initialState: State = {\n  isLoading: false,\n  isAllEmployees: true,\n  selectedEmployee: null,\n  paginatedTransactions: null,\n  transactionsByEmployee: null,\n}\n\nconst reducer = (state: State, action: any) => {\n  switch (action.type) {\n    case \"SET_LOADING\":\n      return { ...state, isLoading: action.payload }\n    case \"SET_ALL_EMPLOYEES\":\n      return { ...state, isAllEmployees: true, selectedEmployee: null, paginatedTransactions: null }\n    case \"SET_SELECTED_EMPLOYEE\":\n      return { ...state, selectedEmployee: action.payload, isAllEmployees: false }\n    case \"SET_PAGINATED_TRANSACTIONS\":\n      return { ...state, paginatedTransactions: action.payload }\n    case \"SET_TRANSACTIONS_BY_EMPLOYEE\":\n      return { ...state, transactionsByEmployee: action.payload }\n    default:\n      return state\n  }\n}\n\nexport function App() {\n  const [\n    { isLoading, isAllEmployees, selectedEmployee, paginatedTransactions, transactionsByEmployee },\n    dispatch,\n  ] = useReducer(reducer, initialState)\n\n  const { data: employees, fetchAll: fetchEmployees } = useEmployees()\n  const { fetchAll: fetchPaginatedTransactions } = usePaginatedTransactions()\n  const { fetchById: fetchTransactionsByEmployee } = useTransactionsByEmployee()\n\n  useEffect(() => {\n    const fetchInitialData = async () => {\n      dispatch({ type: \"SET_LOADING\", payload: true })\n      await fetchEmployees()\n      await fetchPaginatedTransactions()\n      dispatch({ type: \"SET_LOADING\", payload: false })\n    }\n\n    fetchInitialData()\n  }, [fetchEmployees, fetchPaginatedTransactions])\n\n  const handleEmployeeChange = async (newValue: Employee | null) => {\n    if (newValue === null || newValue.id === \"all-employees\") {\n      dispatch({ type: \"SET_ALL_EMPLOYEES\" })\n      await fetchPaginatedTransactions() // Load all transactions\n    } else if (newValue.id) {\n      dispatch({ type: \"SET_SELECTED_EMPLOYEE\", payload: newValue })\n      dispatch({ type: \"SET_LOADING\", payload: true })\n      await fetchTransactionsByEmployee(newValue.id) // Load specific employee's transactions\n      dispatch({ type: \"SET_LOADING\", payload: false })\n    }\n  }\n\n  const transactions = isAllEmployees ? paginatedTransactions?.data || [] : transactionsByEmployee || []\n\n  return (\n    <Fragment>\n      <main className=\"MainContainer\">\n        <Instructions />\n        <hr className=\"RampBreak--l\" />\n\n        <InputSelect<Employee>\n          isLoading={isLoading}\n          defaultValue={EMPTY_EMPLOYEE}\n          items={employees === null ? [] : [EMPTY_EMPLOYEE, ...employees]}\n          label=\"Filter by employee\"\n          loadingLabel=\"Loading employees\"\n          parseItem={(item) => ({\n            value: item.id,\n            label: `${item.firstName} ${item.lastName}`,\n          })}\n          onChange={handleEmployeeChange}\n        />\n\n        {selectedEmployee && (\n          <div>\n            <h3>Selected Employee:</h3>\n            <p>\n              {selectedEmployee.firstName} {selectedEmployee.lastName}\n            </p>\n          </div>\n        )}\n\n        <div className=\"RampBreak--l\" />\n\n        <div className=\"RampGrid\">\n          {isLoading ? <div>Loading transactions...</div> : <Transactions transactions={transactions} />}\n        </div>\n      </main>\n    </Fragment>\n  )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}