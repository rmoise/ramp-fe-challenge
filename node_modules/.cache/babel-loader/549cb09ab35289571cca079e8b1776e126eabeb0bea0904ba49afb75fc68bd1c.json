{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useState } from \"react\";\nimport { useCustomFetch } from \"./useCustomFetch\";\nexport function usePaginatedTransactions() {\n  _s();\n  const {\n    fetchWithCache,\n    loading\n  } = useCustomFetch();\n  const [paginatedTransactions, setPaginatedTransactions] = useState(null);\n  const fetchAll = useCallback(async () => {\n    const params = {\n      page: paginatedTransactions ? paginatedTransactions.nextPage : 0\n    };\n    const response = await fetchWithCache(\"paginatedTransactions\", params);\n    setPaginatedTransactions(previousResponse => {\n      if (!response) {\n        return previousResponse; // Maintain previous state if response is null\n      }\n      return {\n        data: [...((previousResponse === null || previousResponse === void 0 ? void 0 : previousResponse.data) || []), ...response.data],\n        nextPage: response.nextPage !== undefined ? response.nextPage : null\n      };\n    });\n  }, [fetchWithCache, paginatedTransactions]);\n  const invalidateData = useCallback(() => {\n    setPaginatedTransactions(null);\n  }, []);\n  return {\n    data: paginatedTransactions,\n    loading,\n    fetchAll,\n    invalidateData\n  };\n}\n_s(usePaginatedTransactions, \"5C7xQHueO9nKLl+7c12EAAA+DoA=\", false, function () {\n  return [useCustomFetch];\n});","map":{"version":3,"names":["useCallback","useState","useCustomFetch","usePaginatedTransactions","_s","fetchWithCache","loading","paginatedTransactions","setPaginatedTransactions","fetchAll","params","page","nextPage","response","previousResponse","data","undefined","invalidateData"],"sources":["/Users/roderickmoise/Desktop/Documents/Downloads/ramp-fe-challenge/src/hooks/usePaginatedTransactions.ts"],"sourcesContent":["import { useCallback, useState } from \"react\"\nimport { PaginatedRequestParams, PaginatedResponse, Transaction } from \"../utils/types\"\nimport { PaginatedTransactionsResult } from \"./types\"\nimport { useCustomFetch } from \"./useCustomFetch\"\n\nexport function usePaginatedTransactions(): PaginatedTransactionsResult {\n  const { fetchWithCache, loading } = useCustomFetch()\n  const [paginatedTransactions, setPaginatedTransactions] = useState<PaginatedResponse<\n    Transaction[]\n  > | null>(null)\n\n  const fetchAll = useCallback(async () => {\n    const params: PaginatedRequestParams = {\n      page: paginatedTransactions ? paginatedTransactions.nextPage : 0,\n    }\n\n    const response = await fetchWithCache<PaginatedResponse<Transaction[]>, PaginatedRequestParams>(\n      \"paginatedTransactions\",\n      params\n    )\n\n    setPaginatedTransactions((previousResponse) => {\n      if (!response) {\n        return previousResponse // Maintain previous state if response is null\n      }\n\n      return {\n        data: [...(previousResponse?.data || []), ...response.data],\n        nextPage: response.nextPage !== undefined ? response.nextPage : null,\n      }\n    })\n  }, [fetchWithCache, paginatedTransactions])\n\n  const invalidateData = useCallback(() => {\n    setPaginatedTransactions(null)\n  }, [])\n\n  return { data: paginatedTransactions, loading, fetchAll, invalidateData }\n}\n\n"],"mappings":";AAAA,SAASA,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAG7C,SAASC,cAAc,QAAQ,kBAAkB;AAEjD,OAAO,SAASC,wBAAwBA,CAAA,EAAgC;EAAAC,EAAA;EACtE,MAAM;IAAEC,cAAc;IAAEC;EAAQ,CAAC,GAAGJ,cAAc,CAAC,CAAC;EACpD,MAAM,CAACK,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGP,QAAQ,CAExD,IAAI,CAAC;EAEf,MAAMQ,QAAQ,GAAGT,WAAW,CAAC,YAAY;IACvC,MAAMU,MAA8B,GAAG;MACrCC,IAAI,EAAEJ,qBAAqB,GAAGA,qBAAqB,CAACK,QAAQ,GAAG;IACjE,CAAC;IAED,MAAMC,QAAQ,GAAG,MAAMR,cAAc,CACnC,uBAAuB,EACvBK,MACF,CAAC;IAEDF,wBAAwB,CAAEM,gBAAgB,IAAK;MAC7C,IAAI,CAACD,QAAQ,EAAE;QACb,OAAOC,gBAAgB,EAAC;MAC1B;MAEA,OAAO;QACLC,IAAI,EAAE,CAAC,IAAI,CAAAD,gBAAgB,aAAhBA,gBAAgB,uBAAhBA,gBAAgB,CAAEC,IAAI,KAAI,EAAE,CAAC,EAAE,GAAGF,QAAQ,CAACE,IAAI,CAAC;QAC3DH,QAAQ,EAAEC,QAAQ,CAACD,QAAQ,KAAKI,SAAS,GAAGH,QAAQ,CAACD,QAAQ,GAAG;MAClE,CAAC;IACH,CAAC,CAAC;EACJ,CAAC,EAAE,CAACP,cAAc,EAAEE,qBAAqB,CAAC,CAAC;EAE3C,MAAMU,cAAc,GAAGjB,WAAW,CAAC,MAAM;IACvCQ,wBAAwB,CAAC,IAAI,CAAC;EAChC,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAEO,IAAI,EAAER,qBAAqB;IAAED,OAAO;IAAEG,QAAQ;IAAEQ;EAAe,CAAC;AAC3E;AAACb,EAAA,CAjCeD,wBAAwB;EAAA,QACFD,cAAc;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}